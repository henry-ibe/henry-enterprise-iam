# ============================================================
# Henry Enterprise LLC â€“ Phase 60 (Future-Ready IAM Stack)
# Keycloak + Portal Router (OIDC) + Dashboards + Public Site
# Designed for HTTP only; compatible with existing scripts
# ============================================================

version: "3.8"

services:
  # ==================== BACKEND: DATABASE ====================
  keycloak-db:
    image: postgres:15-alpine
    container_name: phase60-keycloak-db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: ${KC_DB_PASSWORD:-KeycloakDB123!}
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # ==================== KEYCLOAK (AUTH) ====================
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: phase60-keycloak
    command:
      - start-dev
      - --import-realm
    ports:
      - "8180:8080"
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: ${KC_DB_PASSWORD:-KeycloakDB123!}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-Admin123!@#}
      KC_HTTP_ENABLED: "true"
      KC_PROXY: edge
      KC_HEALTH_ENABLED: "true"
      KC_METRICS_ENABLED: "true"
      KC_HOSTNAME: "keycloak"
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm.json:ro
    networks:
      - backend
      - frontend
    depends_on:
      keycloak-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  # ==================== PORTAL ROUTER (OIDC) ====================
  portal-router:
    build:
      context: ./portal-router
      dockerfile: Dockerfile
    container_name: phase60-portal-router
    env_file:
      - ./portal-router/.env
    ports:
      - "5000:5000"
    networks:
      - frontend
      - backend
    depends_on:
      - keycloak
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/healthz"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  # ==================== STREAMLIT DASHBOARDS ====================
  hr-dashboard:
    build:
      context: ./dashboards/hr
      dockerfile: Dockerfile
    container_name: phase60-hr-dashboard
    networks:
      - frontend
    ports:
      - "8501:8501"
    restart: unless-stopped

  it-dashboard:
    build:
      context: ./dashboards/it
      dockerfile: Dockerfile
    container_name: phase60-it-dashboard
    networks:
      - frontend
    ports:
      - "8502:8502"
    restart: unless-stopped

  sales-dashboard:
    build:
      context: ./dashboards/sales
      dockerfile: Dockerfile
    container_name: phase60-sales-dashboard
    networks:
      - frontend
    ports:
      - "8503:8503"
    restart: unless-stopped

  admin-dashboard:
    build:
      context: ./dashboards/admin
      dockerfile: Dockerfile
    container_name: phase60-admin-dashboard
    networks:
      - frontend
    ports:
      - "8504:8504"
    restart: unless-stopped

  # ==================== PUBLIC LANDING PAGE ====================
  public-site:
    image: nginx:alpine
    container_name: phase60-public-site
    volumes:
      - ./public-site:/usr/share/nginx/html:ro
      - ./public-site/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "8080:80"
    networks:
      - frontend
    restart: unless-stopped

# ==================== NETWORKS & VOLUMES ====================
networks:
  frontend:
    name: phase60_frontend
    driver: bridge
  backend:
    name: phase60_backend
    driver: bridge

volumes:
  keycloak-db-data:

